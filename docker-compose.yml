services:
  rabbitmq:
    container_name: pfnd-rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - pfnd2025_data:/rabbitmq

  ml-evaluation-worker:
    build:
      context: ./ml-evaluation-worker
      dockerfile: Dockerfile
    environment:
      - BROKER_URI=amqp://user:password@rabbitmq:5672/%2F
    depends_on:
      - rabbitmq
    volumes:
      - pfnd2025_data:/ml-evaluation-worker
    deploy:
      replicas: 3

  nginx:
    image: nginx:stable-alpine
    container_name: pfnd-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - pfnd2025_data:/var/www/html
      - pfnd2025_data:/var/log/nginx
    depends_on:
      - webapp

  webapp:
    container_name: pfnd-webapp
    build:
      context: ./webapp
      dockerfile: Dockerfile
    volumes:
      - pfnd2025_data:/webapp/build # Output build files to shared volume
    depends_on:
      - business-logic
      - auth
  auth:
    container_name: pfnd-auth
    build:
      context: ./UserService
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      USERS_DB_URL: jdbc:postgresql://userdb:5432/${USERS_DB_NAME}
      LOGSTASH_URL: logstash:5000
      GOOGLE_OAUTH_CLIENT_ID: ${GOOGLE_OAUTH_CLIENT_ID}
      GOOGLE_OAUTH_CLIENT_SECRET: ${GOOGLE_OAUTH_CLIENT_SECRET}
    depends_on:
      - userdb
      # - logstash
    volumes:
      - pfnd2025_data:/auth

  userdb:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${USERS_DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - userdb_data:/data/db

  business-logic:
    container_name: pfnd-business-logic
    build:
      context: ./BusinessLogicService
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      HISTORY_DB_URL: jdbc:postgresql://historydb:5432/${HISTORY_DB_NAME}
      LOGSTASH_URL: logstash:5000
    depends_on:
      - historydb
        #      - logstash
    volumes:
      - pfnd2025_data:/business-logic

  historydb:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${HISTORY_DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - historydb_data:/data/db

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:9.0.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  logstash:
    image: docker.elastic.co/logstash/logstash:9.0.0
    ports:
      - "5005:5000/tcp"
      - "5005:5000/udp"
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    depends_on:
      - elasticsearch

volumes:
  pfnd2025_data:
  userdb_data:
  historydb_data:
  elasticsearch_data:
